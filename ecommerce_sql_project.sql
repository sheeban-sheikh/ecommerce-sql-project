-- 📁 E-Commerce SQL Analysis Project
-- ✅ Real-world business questions answered using SQL

-- 🔹 SET 1

-- Q1: Total revenue generated by each customer
SELECT a.customer_name,
       ROUND(SUM(c.quantity * c.price_per_unit), 2) AS total_revenue
FROM test.customers a
JOIN test.`orders (1)` b ON a.customer_id = b.customer_id
JOIN test.order_items c ON b.order_id = c.order_id
GROUP BY a.customer_id, a.customer_name
ORDER BY total_revenue DESC;

-- Q2: Top 3 customers by revenue from India
SELECT a.customer_name,
       ROUND(SUM(c.quantity * c.price_per_unit), 2) AS total_revenue
FROM test.customers a
JOIN test.`orders (1)` b ON a.customer_id = b.customer_id
JOIN test.order_items c ON b.order_id = c.order_id
WHERE a.country = 'India'
GROUP BY a.customer_id, a.customer_name
ORDER BY total_revenue DESC
LIMIT 3;

-- Q3: Month-wise total number of orders in 2024
SELECT 
  MONTH(order_date) AS month_number,
  MONTHNAME(order_date) AS month_name,
  COUNT(order_id) AS monthwise_orders
FROM test.`orders (1)`
WHERE YEAR(order_date) = 2024
GROUP BY month_number, month_name
ORDER BY month_number;

-- Q4: Products ordered more than 100 times (quantity-wise)
SELECT product_name,
       SUM(quantity) AS total_quantity
FROM test.order_items
GROUP BY product_name
HAVING SUM(quantity) > 100;

-- Q5: Order-wise item summary and order amount
SELECT order_id,
       SUM(quantity) AS total_items,
       ROUND(SUM(price_per_unit * quantity), 2) AS total_order_amount
FROM test.order_items
GROUP BY order_id;


-- 🔹 SET 2

-- 🔸 Q1. Customers who placed more than 3 orders
SELECT a.customer_name,
       COUNT(b.order_id) AS number_of_orders
FROM test.customers a
JOIN test.`orders (1)` b ON a.customer_id = b.customer_id
GROUP BY a.customer_name
HAVING number_of_orders > 3;

-- 🔸 Q2. Monthly total revenue in 2024
SELECT 
  MONTH(order_date) AS month_no,
  MONTHNAME(order_date) AS month_name,
  ROUND(SUM(total_amount), 2) AS monthly_revenue
FROM test.`orders (1)`
WHERE YEAR(order_date) = 2024
GROUP BY month_no, month_name
ORDER BY month_no;

-- 🔸 Q3. Top 3 products by total sales revenue
SELECT product_name,
       ROUND(SUM(quantity * price_per_unit), 2) AS total_revenue
FROM test.order_items
GROUP BY product_name
ORDER BY total_revenue DESC
LIMIT 3;

-- 🔸 Q4. Customers who spent more than ₹5000 overall
SELECT a.customer_name,
       ROUND(SUM(b.total_amount), 2) AS total_spent
FROM test.customers a
JOIN test.`orders (1)` b ON a.customer_id = b.customer_id
GROUP BY a.customer_name
HAVING total_spent > 5000
ORDER BY total_spent DESC;

-- 🔸 Q5. Orders and revenue by country
SELECT a.country,
       COUNT(b.order_id) AS order_count,
       ROUND(SUM(total_amount), 2) AS total_revenue 
FROM test.customers a
JOIN test.`orders (1)` b ON a.customer_id = b.customer_id
GROUP BY a.country
ORDER BY order_count DESC;
